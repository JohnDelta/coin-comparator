{"version":3,"sources":["App.js","index.js"],"names":["Menu","setData","useState","apiKey","setApiKey","coins","setCoins","InputCoin","setInputCoin","useEffect","FetchData","a","length","uri","API_URI","join","myHeaders","Headers","append","fetch","method","headers","redirect","then","response","json","result","catch","error","console","log","className","href","target","rel","type","onChange","e","preventDefault","value","OnInputApiKeyChange","placeholder","coin","OnInputCoinChange","onClick","prevCoins","filter","item","map","index","CoinsTable","data","coinsData","Object","keys","forEach","key","price","EUR_ID","percentChange1h","percent_change_1h","previous1hPrice","percentChange24h","percent_change_24h","previous24hPrice","percentChange7d","percent_change_7d","previous7hPrice","percentChange30d","percent_change_30d","previous30dPrice","percentChange60d","percent_change_60d","previous60dPrice","percentChange90d","percent_change_90d","previous90dPrice","compareValue","CalculateComparator","push","toFixed","sort","b","GetCoinsMapped","symbol","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3428d37.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nconst EUR_ID = '2790';\n\nconst Menu = ({setData}) => {\n\n  const API_URI = 'https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest?';\n\n  const [apiKey, setApiKey] = useState('');\n\n  const [coins, setCoins] = useState([]);\n  \n  const [InputCoin, setInputCoin] = useState('');\n\n  useEffect(() => {\n    setCoins(coins);\n  }, [coins]);\n\n  const OnInputCoinChange = (e) => {\n    e.preventDefault();\n    let coin = e.target.value;\n    setInputCoin(coin);\n  };\n\n  const OnInputApiKeyChange = (e) => {\n    e.preventDefault();\n    let apiKey = e.target.value;\n    setApiKey(apiKey);\n  };\n  \n  const AddCoin = () => {\n    if (InputCoin === '') return;\n    setCoins(prevCoins => [...prevCoins, InputCoin]);\n  };\n  \n  const RemoveCoin = () => {\n    if (InputCoin === '') return;\n    setCoins(prevCoins => [...prevCoins.filter((item) => item !== InputCoin)]);\n  };\n  \n  const ClearCoins = () => {\n    setCoins([]);\n  }\n\n  const FetchData = async () => {\n    if (coins.length === 0 || apiKey === '') return;\n    let uri = API_URI + 'convert_id=' + EUR_ID + '&symbol=' + coins.join(','); \n    var myHeaders = new Headers();\n    myHeaders.append(\"X-CMC_PRO_API_KEY\", apiKey);\n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n    fetch(uri, requestOptions)\n      .then(response => response.json())\n      .then(result => setData(result))\n      .catch(error => console.log('error', error));\n  }\n\n  return (\n    <div className='menu-container' key={coins.join(\"_\")}>\n      <div className='key-container'>\n        <p className='title'><a href='https://pro.coinmarketcap.com/login' target='_blank' rel='noreferrer'>CoinMarketCap</a>API Key</p>\n        <input type='text' onChange={(e) => {OnInputApiKeyChange(e)}} />\n      </div>\n      <div className='control-container'>\n        <p className='title'>Input Coin</p>\n        <input type='text' placeholder='ETH' onChange={(e) => {OnInputCoinChange(e)}} />\n        <button className='add-button' onClick={() => {AddCoin()}}>Add</button>\n        <button className='remove-button' onClick={() => RemoveCoin()}>Remove</button>\n      </div>\n      <div className='coins-container'>\n        <p className='title'>Saved Coins</p>\n        <div className='coins'>\n          {coins.map((coin, index) => {\n            return (\n              <div key={'coin_'+index} className='coin'>{coin}</div>\n            );\n          })}\n        </div>\n        <button className='clear-button' onClick={() => {ClearCoins()}}>Clear</button>\n      </div>\n      <button className='fetch-button' onClick={() => {FetchData()}}>Load Data</button>\n    </div>\n  );\n};\n\nconst CoinsTable = ({response}) => {\n\n  // 1st. only average between the previous percent changes\n\n  const CalculateComparator = (\n      price,\n      percentChange1h,\n      percentChange24h,\n      percentChange7d,\n      percentChange30d,\n      percentChange60d,\n      percentChange90d) => {\n\n        let percentChange1hWeight = 1;\n        let percentChange24hWeight = 1;\n        let percentChange7dWeight = 0.9;\n        let percentChange30dWeight = 0.8;\n        let percentChange60dWeight = 0.6;\n        let percentChange90dWeight = 0.4;\n        \n        //let priceWeight = 1 * price;\n\n        let sum = percentChange1h * percentChange1hWeight + \n          percentChange24h * percentChange24hWeight + \n          percentChange7d * percentChange7dWeight + \n          percentChange30d * percentChange30dWeight + \n          percentChange60d * percentChange60dWeight + \n          percentChange90d * percentChange90dWeight;\n\n        let avg = sum / 6;\n\n        return avg;\n  }\n\n  const GetCoinsMapped = (response) => {\n\n    let data = response.data;\n\n    let coinsData = [];\n    let keys = Object.keys(data);\n\n    keys.forEach(key => {\n      \n      let price = data[key]['quote'][EUR_ID].price;\n\n      let percentChange1h = data[key]['quote'][EUR_ID].percent_change_1h;\n      let previous1hPrice = price - price * (percentChange1h / 100);\n\n      let percentChange24h = data[key]['quote'][EUR_ID].percent_change_24h;\n      let previous24hPrice = price - price * (percentChange24h / 100);\n\n      let percentChange7d = data[key]['quote'][EUR_ID].percent_change_7d;\n      let previous7hPrice = price - price * (percentChange7d / 100);\n\n      let percentChange30d = data[key]['quote'][EUR_ID].percent_change_30d;\n      let previous30dPrice = price - price * (percentChange30d / 100);\n\n      let percentChange60d = data[key]['quote'][EUR_ID].percent_change_60d;\n      let previous60dPrice = price - price * (percentChange60d / 100);\n\n      let percentChange90d = data[key]['quote'][EUR_ID].percent_change_90d;\n      let previous90dPrice = price - price * (percentChange90d / 100);\n\n      let compareValue = CalculateComparator(price,\n        percentChange1h,\n        percentChange24h,\n        percentChange7d,\n        percentChange30d,\n        percentChange60d,\n        percentChange90d);\n\n      coinsData.push({\n        'symbol': data[key]['symbol'], \n        'price': price.toFixed(4) + '€',\n        'percentChange1h': percentChange1h.toFixed(4) + '%',\n        'previous1hPrice': previous1hPrice.toFixed(4) + '€',\n        'percentChange24h': percentChange24h.toFixed(4) + '%',\n        'previous24hPrice': previous24hPrice.toFixed(4) + '€',\n        'percentChange7d': percentChange7d.toFixed(4) + '%',\n        'previous7hPrice': previous7hPrice.toFixed(4) + '€',\n        'percentChange30d': percentChange30d.toFixed(4) + '%',\n        'previous30dPrice': previous30dPrice.toFixed(4) + '€',\n        'percentChange60d': percentChange60d.toFixed(4) + '%',\n        'previous60dPrice': previous60dPrice.toFixed(4) + '€',\n        'percentChange90d': percentChange90d.toFixed(4) + '%',\n        'previous90dPrice': previous90dPrice.toFixed(4) + '€',\n        'compareValue': compareValue.toFixed(4)\n      });\n    });\n\n    coinsData.sort((a, b) => a.compareValue - b.compareValue); // Ascending\n\n    return coinsData;\n  }\n\n  if (response === null || response.length === 0) return [];\n\n  return (\n    <div className='coinsTable-container'>\n      <div className='table'>\n        <div className='header'>\n          <div className='cell'>Coin</div>\n          <div className='cell'>3 Months</div>\n          <div className='cell'>2 Months</div>\n          <div className='cell'>1 Month</div>\n          <div className='cell'>7 Days</div>\n          <div className='cell'>24 Hours</div>\n          <div className='cell'>1 Hour</div>\n          <div className='cell'>Current Price</div>\n          <div className='cell'>Comparator</div>\n        </div>\n        {GetCoinsMapped(response).map((coin, index) => (\n          <div className='row' key={'coinRow'+index}>\n            <div className='cell'>{coin.symbol}</div>\n            <div className='cell'>\n              <p>{coin.percentChange90d}</p>\n              <p>{coin.previous90dPrice}</p>\n            </div>\n            <div className='cell'>\n              <p>{coin.percentChange60d}</p>\n              <p>{coin.previous60dPrice}</p>\n            </div>\n            <div className='cell'>\n              <p>{coin.percentChange30d}</p>\n              <p>{coin.previous30dPrice}</p>\n            </div>\n            <div className='cell'>\n              <p>{coin.percentChange7d}</p>\n              <p>{coin.previous7hPrice}</p>\n            </div>\n            <div className='cell'>\n              <p>{coin.percentChange24h}</p>\n              <p>{coin.previous24hPrice}</p>\n            </div>\n            <div className='cell'>\n              <p>{coin.percentChange1h}</p>\n              <p>{coin.previous1hPrice}</p>\n            </div>\n            <div className='cell'>\n              <p>{coin.price}</p>\n            </div>\n            <div className='cell'>{coin.compareValue}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nconst App = () => {\n\n  const [data, setData] = useState([]);\n\n  return (\n    <div className='app-container'>\n      <Menu setData={setData} />\n      <CoinsTable response={data} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}